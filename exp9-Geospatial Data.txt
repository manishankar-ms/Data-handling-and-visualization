# Load necessary libraries
library(ggplot2)
library(ggmap)
library(maps)
library(dplyr)

# Create the dataset
data <- data.frame(
  City = c("New York", "Los Angeles", "Chicago", "Houston", "Phoenix"),
  Latitude = c(40.7128, 34.0522, 41.8781, 29.7604, 33.4484),
  Longitude = c(-74.0060, -118.2437, -87.6298, -95.3698, -112.0740),
  Population = c(8398748, 3990456, 2705994, 2325502, 1660272)
)

# 1. Scatter plot of cities on a map based on Latitude and Longitude
world_map <- map_data("world")

ggplot() +
  geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
  geom_point(data = data, aes(x = Longitude, y = Latitude), color = "red", size = 3) +
  labs(title = "Cities on World Map", x = "Longitude", y = "Latitude") +
  theme_minimal()

# 2. Bubble map where bubble size represents Population
ggplot() +
  geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
  geom_point(data = data, aes(x = Longitude, y = Latitude, size = Population), color = "red", alpha = 0.6) +
  scale_size(range = c(3, 10)) +
  labs(title = "Bubble Map of Cities by Population", x = "Longitude", y = "Latitude") +
  theme_minimal()

# 3. Choropleth map of Population by city (This is not typical use of choropleth)
# Since a choropleth is better suited for areas like states or countries, we will skip it as it's not meaningful for points

# 4. Bar plot showing the top 5 cities by Population
ggplot(data, aes(x = reorder(City, -Population), y = Population)) +
  geom_bar(stat = "identity", fill = "blue") +
  labs(title = "Top 5 Cities by Population", x = "City", y = "Population") +
  theme_minimal()

# 5. Heatmap showing the density of cities based on Population
ggplot(data, aes(x = Longitude, y = Latitude)) +
  stat_density2d(aes(fill = ..level..), geom = "polygon") +
  geom_point(aes(size = Population), color = "red", alpha = 0.6) +
  scale_fill_gradient(low = "blue", high = "red") +
  labs(title = "Heatmap of City Density by Population", x = "Longitude", y = "Latitude") +
  theme_minimal()
